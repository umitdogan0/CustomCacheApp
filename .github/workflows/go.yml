name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Go project
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22' # Projenizde kullandığınız Go sürümüne göre ayarlayın

    - name: Build for Linux
      run: GOOS=linux GOARCH=amd64 go build -o custom-cache-linux

    - name: Build for Windows
      run: GOOS=windows GOARCH=amd64 go build -o custom-cache-windows.exe

    - name: Build for macOS
      run: GOOS=darwin GOARCH=amd64 go build -o custom-cache-macos

    - name: Archive builds
      uses: actions/upload-artifact@v2
      with:
        name: builds
        path: |
          custom-cache-linux
          custom-cache-windows.exe
          custom-cache-macos

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Download builds
      uses: actions/download-artifact@v2
      with:
        name: builds

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
        body: |
          Release ${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      id: upload-linux-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./custom-cache-linux
        asset_name: custom-cache-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      id: upload-windows-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./custom-cache-windows.exe
        asset_name: custom-cache-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Release Asset
      id: upload-macos-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./custom-cache-macos
        asset_name: custom-cache-macos
        asset_content_type: application/octet-stream
